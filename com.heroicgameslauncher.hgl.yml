id: com.heroicgameslauncher.hgl
sdk: org.freedesktop.Sdk
runtime: org.freedesktop.Platform
runtime-version: '24.08'
base: org.electronjs.Electron2.BaseApp
base-version: '24.08'
command: heroic-run
separate-locales: false

cleanup:
  - /share/docs
  - /share/man

sdk-extensions:
  - org.freedesktop.Sdk.Compat.i386
  - org.freedesktop.Sdk.Extension.toolchain-i386

finish-args:
  - --allow=devel
  - --allow=multiarch
  - --allow=bluetooth

  # pressure vessel
  - --allow=per-app-dev-shm
  - --device=all
  - --env=PATH=/app/bin:/app/utils/bin:/usr/bin:/usr/lib/extensions/vulkan/MangoHud/bin:/usr/lib/extensions/vulkan/gamescope/bin:/usr/lib/extensions/vulkan/OBSVkCapture/bin:/app/bin/heroic/resources/app.asar.unpacked/build/bin/linux
  - --env=LD_LIBRARY_PATH=/usr/lib/extensions/vulkan/gamescope/lib
  - --filesystem=~/.local/share/lutris:rw
  - --filesystem=~/.steam/steam:rw
  - --filesystem=~/.local/share/applications:rw
  - --filesystem=~/.steam:rw
  - --filesystem=~/Games/Heroic:create
  - --filesystem=~/.var/app/com.valvesoftware.Steam:rw
  - --filesystem=xdg-documents
  - --filesystem=xdg-desktop
  - --filesystem=xdg-run/gamescope-0:rw
  # should fix access to SD card on the deck
  - --filesystem=/run/media
  # There are still quite a few users using /mnt/ and /media/ for external drives
  - --filesystem=/mnt
  - --filesystem=/media
  # should fix steamdeck controler navigation
  - --filesystem=/run/udev:ro
  # should fix discord rich presence
  - --filesystem=xdg-run/app/com.discordapp.Discord:create
  # umu
  - --filesystem=xdg-data/umu:create
  - --filesystem=xdg-config/MangoHud:ro
  - --persist=.
  - --share=ipc
  - --share=network
  - --socket=x11
  - --socket=wayland
  - --socket=pulseaudio
  - --talk-name=org.kde.StatusNotifierWatcher
  - --talk-name=com.canonical.Unity
  - --talk-name=org.freedesktop.ScreenSaver

  # copied from steam (wip)
  # wine uses this for disk drives (mountmgr.sys)
  - --system-talk-name=org.freedesktop.UDisks2
  - --talk-name=org.gnome.SettingsDaemon.MediaKeys
  # Wine uses UDisks2 to enumerate disk drives
  - --system-talk-name=org.freedesktop.UDisks2
  - --talk-name=org.kde.StatusNotifierWatcher
  - --system-talk-name=org.freedesktop.UPower
  - --talk-name=org.freedesktop.PowerManagement
  - --talk-name=org.freedesktop.Notifications
  - --env=TZ=
  - --unset-env=TZ
  - --env=LC_ADDRESS=C
  - --env=LC_COLLATE=C
  - --env=LC_MONETARY=C
  - --env=LC_MEASUREMENT=C
  - --env=LC_NAME=C
  - --env=LC_NUMERIC=C
  - --env=LC_TELEPHONE=C
  - --env=ALSA_CONFIG_PATH=
  - --unset-env=ALSA_CONFIG_PATH
  - --env=MESA_GLSL_CACHE_DIR=
  - --unset-env=MESA_GLSL_CACHE_DIR
  - --env=STEAM_RUNTIME_PREFER_HOST_LIBRARIES=
  - --unset-env=STEAM_RUNTIME_PREFER_HOST_LIBRARIES
  - --env=STEAM_RUNTIME=
  - --unset-env=STEAM_RUNTIME
  - --env=SDL_VIDEODRIVER=
  - --unset-env=SDL_VIDEODRIVER
  - --env=DBUS_FATAL_WARNINGS=0
  - --env=PROTON_DEBUG_DIR=/var/tmp
  - --env=XDG_CONFIG_DIRS=/etc/xdg:/usr/lib/x86_64-linux-gnu/GL:/usr/lib/i386-linux-gnu/GL
  - --env=XDG_DATA_DIRS=/app/share:/usr/lib/extensions/vulkan/share:/usr/share:/usr/share/runtime/share:/run/host/user-share:/run/host/share:/usr/lib/pressure-vessel/overrides/share
  - --env=GST_PLUGIN_SYSTEM_PATH=/app/lib/gstreamer-1.0:/app/lib32/gstreamer-1.0:/usr/lib/extensions/gstreamer-1.0:/usr/lib/x86_64-linux-gnu/gstreamer-1.0:/usr/lib/i386-linux-gnu/gstreamer-1.0

add-extensions:
  org.freedesktop.Platform.Compat.i386:
    directory: lib/i386-linux-gnu
    version: '24.08'

  org.freedesktop.Platform.Compat.i386.Debug:
    directory: lib/debug/lib/i386-linux-gnu
    version: '24.08'
    no-autodownload: true

  org.freedesktop.Platform.GL32:
    directory: lib/i386-linux-gnu/GL
    version: '1.4'
    versions: 24.08;1.4
    subdirectories: true
    no-autodownload: true
    autodelete: false
    add-ld-path: lib
    merge-dirs: vulkan/icd.d;glvnd/egl_vendor.d;OpenCL/vendors;lib/dri;lib/d3d;vulkan/explicit_layer.d;vulkan/implicit_layer.d
    download-if: active-gl-driver
    enable-if: active-gl-driver

  x-compat-i386-opts: &compat_i386_opts
    prepend-pkg-config-path: /app/lib32/pkgconfig:/usr/lib/i386-linux-gnu/pkgconfig
    ldflags: -L/app/lib32
    append-path: /usr/lib/sdk/toolchain-i386/bin
    env:
      CC: i686-unknown-linux-gnu-gcc
      CXX: i686-unknown-linux-gnu-g++
    libdir: /app/lib32

  org.freedesktop.Platform.VAAPI.Intel.i386:
    directory: lib/i386-linux-gnu/dri/intel-vaapi-driver
    version: '24.08'
    versions: '24.08'
    autodelete: false
    no-autodownload: true
    add-ld-path: lib
    download-if: have-intel-gpu
    autoprune-unless: have-intel-gpu

  com.valvesoftware.Steam.Utility:
    subdirectories: true
    directory: utils
    version: stable
    versions: stable;beta;test
    add-ld-path: lib
    merge-dirs: bin
    no-autodownload: true
    autodelete: true

modules:
  # --- Tools ---
  - name: vulkan-tools
    buildsystem: cmake-ninja
    config-opts:
      - -DGLSLANG_INSTALL_DIR=/app
      - -DVULKAN_HEADERS_INSTALL_DIR=/app
      - -DCMAKE_BUILD_TYPE=Release
    sources:
      - type: archive
        url: https://github.com/KhronosGroup/Vulkan-Tools/archive/v1.3.297/Vulkan-Tools-1.3.297.tar.gz
        sha256: 95bffa39d90f3ec81d8e3a0fa6c846ac1a10442152cc0b6d0d6567ce48932f89
    modules:
      - name: volk
        buildsystem: cmake-ninja
        config-opts:
          - -DVOLK_INSTALL=ON
        sources:
          - type: archive
            url: https://github.com/zeux/volk/archive/vulkan-sdk-1.3.296.0.tar.gz
            sha256: 8ffd0e81e29688f4abaa39e598937160b098228f37503903b10d481d4862ab85
        modules:
          - name: vulkan-headers
            buildsystem: cmake-ninja
            sources:
              - type: archive
                url: https://github.com/KhronosGroup/Vulkan-Headers/archive/v1.3.297/Vulkan-Headers-v1.3.297.tar.gz
                sha256: 1d679e2edc43cb7ad818b81dea960e374f1d6dd082325eb9b4c6113e76263c02

  - name: gamemode
    buildsystem: meson
    config-opts: &gamemode_opts
      - -Dwith-examples=false
      - -Dwith-util=false
      - -Dwith-sd-bus-provider=no-daemon
    sources: &gamemode_sources
      - type: git
        url: https://github.com/FeralInteractive/gamemode.git
        tag: 1.8.2
        commit: c54d6d4243b0dd0afcb49f2c9836d432da171a2b
        x-checker-data:
          type: git

  - name: gamemode-32bit
    build-options:
      arch:
        x86_64: *compat_i386_opts
    buildsystem: meson
    config-opts: *gamemode_opts
    sources: *gamemode_sources

  - name: gamemoderun
    buildsystem: simple
    build-commands:
      - install -Dm755 data/gamemoderun -t /app/bin
    sources: *gamemode_sources

  - name: rsync
    config-opts:
      - --prefix=${FLATPAK_DEST}
      - --with-included-popt
      - --with-included-zlib
      - --host=x86
      - --disable-xxhash
      - --disable-md2man
    sources:
      - type: archive
        url: https://download.samba.org/pub/rsync/src/rsync-3.4.1.tar.gz
        sha256: 2924bcb3a1ed8b551fc101f740b9f0fe0a202b115027647cf69850d65fd88c52
        x-checker-data:
          type: anitya
          project-id: 4217
          stable-only: true
          url-template: https://download.samba.org/pub/rsync/src/rsync-$version.tar.gz

  # --- Heroic ---
  - name: heroic
    buildsystem: simple
    build-commands:
      - chmod +x Heroic-*.AppImage
      - ./Heroic-*.AppImage --appimage-extract
      - mv squashfs-root /app/bin/heroic
      - install -D heroic-run -t /app/bin
      - patch-desktop-filename ${FLATPAK_DEST}/bin/heroic/resources/app.asar
    sources:
      - type: script
        dest-filename: heroic-run
        commands:
          - for i in {0..9}; do
          - test -S $XDG_RUNTIME_DIR/discord-ipc-$i || ln -sf {app/com.discordapp.Discord,$XDG_RUNTIME_DIR}/discord-ipc-$i;
          - done
          - export TMPDIR="$XDG_RUNTIME_DIR/app/$FLATPAK_ID"
          - zypak-wrapper /app/bin/heroic/heroic "$@"

      - type: file
        url: https://github.com/Heroic-Games-Launcher/HeroicGamesLauncher/releases/download/v2.17.0/Heroic-2.17.0-linux-x86_64.AppImage
        sha512: 6c97d9edd15207790bc3e2cdbc9a16d83161f0362323425eb5bf306ab23df9e1994ba4132b727af61085521a0af91bafd8c11fda9070290e7d9947f4234a32fe

  - name: platform-bootstrap
    buildsystem: simple
    build-commands:
      - |
        set -e
        mkdir -p /app/bin
        mkdir -p /app/utils
        mkdir -p /app/lib/i386-linux-gnu
        mkdir -p /app/lib/debug/lib/i386-linux-gnu
        mkdir -p /app/lib/i386-linux-gnu/GL
        mkdir -p /app/lib/i386-linux-gnu/dri/intel-vaapi-driver
        install -Dm644 com.heroicgameslauncher.hgl.png /app/share/icons/hicolor/128x128/apps/com.heroicgameslauncher.hgl.png
        install -Dm644 com.heroicgameslauncher.hgl.desktop /app/share/applications/${FLATPAK_ID}.desktop
        install -Dm644 -t /app/etc ld.so.conf
        install -Dm644 $FLATPAK_ID.metainfo.xml /app/share/metainfo/$FLATPAK_ID.appdata.xml
    sources:
      - type: inline
        dest-filename: ld.so.conf
        contents: |
          /app/lib32
          /app/lib/i386-linux-gnu
      - type: file
        path: com.heroicgameslauncher.hgl.metainfo.xml
      - type: file
        path: com.heroicgameslauncher.hgl.png
      - type: file
        path: com.heroicgameslauncher.hgl.desktop

  #START --- Winetricks Deps ---
  - name: p7zip
    no-autogen: true
    build-options:
      strip: true
    make-args:
      - all2
      - OPTFLAGS=-O2 -g -std=gnu++14
      - DEST_HOME=$(FLATPAK_DEST)
      - DEST_BIN=$(FLATPAK_DEST)/bin
      - DEST_SHARE=$(FLATPAK_DEST)/lib/p7zip
      - DEST_MAN=$(FLATPAK_DEST)/share/man
    make-install-args:
      - DEST_HOME=$(FLATPAK_DEST)
      - DEST_BIN=$(FLATPAK_DEST)/bin
      - DEST_SHARE=$(FLATPAK_DEST)/lib/p7zip
      - DEST_MAN=$(FLATPAK_DEST)/share/man
    sources:
      - type: archive
        url: https://github.com/p7zip-project/p7zip/archive/refs/tags/v17.05.tar.gz
        sha256: d2788f892571058c08d27095c22154579dfefb807ebe357d145ab2ddddefb1a6
      - type: shell
        only-arches:
          - x86_64
        commands:
          - ln -sf makefile.linux_amd64_asm makefile.machine
      - type: shell
        only-arches:
          - i386
        commands:
          - ln -sf makefile.linux_x86_asm_gcc_4.X makefile.machine
    modules:
      - name: yasm
        buildsystem: cmake-ninja
        sources:
          - type: archive
            url: https://github.com/yasm/yasm/archive/v1.3.0.tar.gz
            sha256: f708be0b7b8c59bc1dbe7134153cd2f31faeebaa8eec48676c10f972a1f13df3
        cleanup:
          - '*'

  - name: cabextract
    build-options:
      strip: true
    sources:
      - type: archive
        url: https://www.cabextract.org.uk/cabextract-1.11.tar.gz
        sha256: b5546db1155e4c718ff3d4b278573604f30dd64c3c5bfd4657cd089b823a3ac6
        x-checker-data:
          type: anitya
          project-id: 245
          url-template: https://www.cabextract.org.uk/cabextract-$version.tar.gz

  - name: unrar
    no-autogen: true
    build-options:
      strip: true
    make-install-args:
      - DESTDIR=$(FLATPAK_DEST)
    sources:
      - type: archive
        url: https://www.rarlab.com/rar/unrarsrc-7.1.6.tar.gz
        sha256: ca5e1da37dd6fa1b78bb5ed675486413f79e4a917709744aa04b6f93dfd914f0
        x-checker-data:
          type: anitya
          project-id: 13306
          url-template: https://www.rarlab.com/rar/unrarsrc-$version.tar.gz

  - name: binutils-ar
    buildsystem: simple
    build-options:
      strip: true
    build-commands:
      - install -Dm755 /usr/bin/ar -t ${FLATPAK_DEST}/bin/
      - install -Dm755 /usr/lib/$(gcc -print-multiarch)/libbfd-*.so -t ${FLATPAK_DEST}/lib/

  - name: aria2
    config-opts:
      - --disable-libaria2
      - --disable-websocket
      - --without-sqlite3
    sources:
      - type: archive
        sha256: 60a420ad7085eb616cb6e2bdf0a7206d68ff3d37fb5a956dc44242eb2f79b66b
        url: https://github.com/aria2/aria2/releases/download/release-1.37.0/aria2-1.37.0.tar.xz

  - name: libcaca
    config-opts: &libcaca_config_opts
      - --disable-doc
      - --disable-python
      - --disable-ruby
      - --disable-static
    sources: &libcaca_sources
      - type: archive
        url: http://caca.zoy.org/files/libcaca/libcaca-0.99.beta19.tar.gz
        sha256: 128b467c4ed03264c187405172a4e83049342cc8cc2f655f53a2d0ee9d3772f4

  - name: libcaca-32bit
    build-options:
      arch:
        x86_64: *compat_i386_opts
    config-opts: *libcaca_config_opts
    sources: *libcaca_sources

  - name: libbsd
    sources: &libbsd_sources
      - type: archive
        url: https://libbsd.freedesktop.org/releases/libbsd-0.10.0.tar.xz
        sha256: 34b8adc726883d0e85b3118fa13605e179a62b31ba51f676136ecb2d0bc1a887

  - name: libbsd-32bit
    build-options:
      arch:
        x86_64: *compat_i386_opts
    sources: *libbsd_sources

  - name: libjpeg # with libjpeg.so.8
    buildsystem: cmake-ninja
    config-opts:
      - -DCMAKE_SKIP_RPATH:BOOL=YES
      - -DENABLE_STATIC:BOOL=NO
      - -DWITH_JPEG8:BOOL=YES
      - -DCMAKE_INSTALL_LIBDIR=/app/lib # uses lib64 by default
    sources: &libjpeg_sources
      - type: archive
        url: https://github.com/libjpeg-turbo/libjpeg-turbo/archive/refs/tags/2.1.3.tar.gz
        sha256: dbda0c685942aa3ea908496592491e5ec8160d2cf1ec9d5fd5470e50768e7859

  - name: libjpeg-32bit # with libjpeg.so.8
    buildsystem: cmake-ninja
    build-options:
      arch:
        x86_64: *compat_i386_opts
    config-opts:
      - -DCMAKE_SKIP_RPATH:BOOL=YES
      - -DENABLE_STATIC:BOOL=NO
      - -DWITH_JPEG8:BOOL=YES
    sources: *libjpeg_sources
  #END --- Winetricks Deps ---

  # --- MIDI Support (TiMidity++ with FluidR3_GM) ---
  - name: timidity
    buildsystem: autotools
    config-opts:
      - --enable-alsa
      - --enable-alsaseq
      - --enable-audio=alsa,pulse
      - --enable-interface=server,alsaseq
    cleanup: ["*.la", "*.a", "/include", "/lib/pkgconfig", "/share/man", "/share/doc"]
    sources:
      - type: archive
        url: https://sourceforge.net/projects/timidity/files/TiMidity++/TiMidity++-2.15.0/TiMidity++-2.15.0.tar.bz2
        sha256: 161fc0395af16b51f7117ad007c3e434c825a308fa29ad44b626ee8f9bb1c8f5
      - type: inline
        dest-filename: custom-timidity.cfg
        contents: |
          dir /app/share/soundfonts
          source /app/share/soundfonts/fluid3gm.cfg
          opt EFresamp=d
          opt EFvlpf=d
          opt EFreverb=d
      - type: patch
        path: patches/0001-timidity-fix-missing-includes.patch
      - type: inline
        dest-filename: heroic-midi-wrapper
        contents: |
          #!/bin/bash
        
          detect_midi_game() {
            local game_dir="$1"
          
            if [[ ! -d "$game_dir" ]]; then
              return 1  # No game directory found
            fi
          
            if find "$game_dir" -iname "*.mid" -o -iname "*.midi" | grep -q .; then
              echo "Found MIDI files in game directory"
              return 0
            fi
          
            if find "$game_dir" -name "*.cfg" -o -name "*.conf" -o -name "*.ini" | \
               xargs grep -l -i "midi\|timidity\|mpu-401\|sound.*midi" 2>/dev/null | grep -q .; then
              echo "Found MIDI configuration references"
              return 0
            fi
          
            if find "$game_dir" -name "*.exe" | \
               xargs grep -l "MIDI\|MPU\|SoundBlaster" 2>/dev/null | grep -q .; then
              echo "Found MIDI-related strings in executables"
              return 0
            fi
          
            return 1  # No MIDI indicators found
          }
        
          start_timidity() {
            if ! pgrep -f "timidity.*-iA" > /dev/null; then
              echo "Auto-starting TiMidity++ for MIDI-enabled game"
              /app/bin/timidity -iA &
              sleep 2
              echo "TiMidity++ ready for MIDI playback"
            fi
          }
        
          if [[ -n "$STEAM_COMPAT_INSTALL_PATH" ]]; then
            if detect_midi_game "$STEAM_COMPAT_INSTALL_PATH"; then
              start_timidity
            fi
          fi
        
          exec /app/bin/gamemoderun-original "$@"
          GAME_EXIT_CODE=$?

          cleanup
          exit $GAME_EXIT_CODE
       
    post-install:
        - install -d ${FLATPAK_DEST}/share/timidity
        - install -Dm644 custom-timidity.cfg ${FLATPAK_DEST}/share/timidity/timidity.cfg
        - mv ${FLATPAK_DEST}/bin/gamemoderun ${FLATPAK_DEST}/bin/gamemoderun-original
        - install -Dm755 heroic-midi-wrapper ${FLATPAK_DEST}/bin/gamemoderun      

      # Copy ALSA configuration files
        - install -d ${FLATPAK_DEST}/share/alsa
        - cp -ar /usr/share/alsa/* ${FLATPAK_DEST}/share/alsa/
        - install -d ${FLATPAK_DEST}/etc
        - ln -sf /app/share/alsa/alsa.conf ${FLATPAK_DEST}/etc/asound.conf

        # Copy ALSA plugins (both x86_62 and i386 for multilib support)
        - install -d ${FLATPAK_DEST}/lib/x86_64-linux-gnu/alsa-lib
        - cp -a /usr/lib/x86_64-linux-gnu/alsa-lib/*.so ${FLATPAK_DEST}/lib/x86_64-linux-gnu/alsa-lib/
        - install -d ${FLATPAK_DEST}/lib/i386-linux-gnu/alsa-lib
        - cp -a /usr/lib/i386-linux-gnu/alsa-lib/*.so ${FLATPAK_DEST}/lib/i386-linux-gnu/alsa-lib/

        # Copy PulseAudio client libraries
        - install -d ${FLATPAK_DEST}/lib/x86_64-linux-gnu
        - cp -a /usr/lib/x86_64-linux-gnu/libpulse.so* ${FLATPAK_DEST}/lib/x86_64-linux-gnu/
        - cp -a /usr/lib/x86_64-linux-gnu/libsndfile.so* ${FLATPAK_DEST}/lib/x86_64-linux-gnu/
        - cp -a /usr/lib/x86_64-linux-gnu/libogg.so* ${FLATPAK_DEST}/lib/x86_64-linux-gnu/
        - cp -a /usr/lib/x86_64-linux-gnu/libvorbis*.so* ${FLATPAK_DEST}/lib/x86_64-linux-gnu/
        - cp -a /usr/lib/x86_64-linux-gnu/libFLAC.so* ${FLATPAK_DEST}/lib/x86_64-linux-gnu/
        - cp -a /usr/lib/x86_64-linux-gnu/libopus.so* ${FLATPAK_DEST}/lib/x86_64-linux-gnu/
        - install -d ${FLATPAK_DEST}/lib/x86_64-linux-gnu/pulseaudio
        - cp -a /usr/lib/x86_64-linux-gnu/pulseaudio/libpulsecommon*.so ${FLATPAK_DEST}/lib/x86_64-linux-gnu/pulseaudio/

  - name: fluidr3-soundfont
    buildsystem: simple
    build-commands:
        - tar -xzf fluid-soundfont.tar.gz -C . "FluidR3 GM2-2.SF2"
        - install -d ${FLATPAK_DEST}/share/soundfonts
        - install -Dm644 "FluidR3 GM2-2.SF2" ${FLATPAK_DEST}/share/soundfonts/FluidR3_GM.sf2
        - echo "soundfont FluidR3_GM.sf2" > fluid3gm.cfg
        - install -Dm644 fluid3gm.cfg ${FLATPAK_DEST}/share/soundfonts/fluid3gm.cfg
    sources:
        - type: file
          url: https://ftp.osuosl.org/pub/musescore/soundfont/fluid-soundfont.tar.gz
          sha256: c815769e44d86f1507b946a6c48c997c7f650699aea1ec4b11ba66e3415c26b9
